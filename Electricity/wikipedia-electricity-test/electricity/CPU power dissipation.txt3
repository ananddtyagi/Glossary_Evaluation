CPU power dissipation

Central processing unit power dissipation or CPU power dissipation is the process in which central processing units (CPUs) consume electrical energy, and dissipate this energy in the form of heat due to the resistance in the electronic circuits.

Designing CPUs that perform tasks efficiently without overheating is a major consideration of nearly all CPU manufacturers to date. Some CPU implementations use very little power; for example, the CPUs in mobile phones often use just a few watts of electricity, while some microcontrollers used in embedded systems may consume only a few milliwatts or even as little as a few microwatts. In comparison, CPUs in general-purpose personal computers, such as desktops and laptops, dissipate significantly more power because of their higher complexity and speed. These microelectronic CPUs may consume power in the order of a few watts to hundreds of watts. Historically, early CPUs implemented with vacuum tubes consumed power on the order of many kilowatts.

CPUs for desktop computers typically use a significant portion of the power consumed by the computer. Other major uses include fast video cards, which contain graphics processing units, and power supplies. In laptops, the LCD's backlight also uses a significant portion of overall power. While energy-saving features have been instituted in personal computers for when they are idle, the overall consumption of today's high-performance CPUs is considerable. This is in strong contrast with the much lower energy consumption of CPUs designed for low-power devices. One such CPU, the Intel XScale, can run at 600 MHz consuming under 1 W of power, whereas Intel x86 PC processors in the same performance bracket consume a few times more energy.

There are some engineering reasons for this pattern. 

Processor manufacturers usually release two power consumption numbers for a CPU:

For example, the Pentium 4 2.8 GHz has 68.4 W typical thermal power and 85 W maximum thermal power. When the CPU is idle, it will draw far less than the typical thermal power. Datasheets normally contain the thermal design power (TDP), which is the maximum amount of heat generated by the CPU, which the cooling system in a computer is required to dissipate. Both Intel and Advanced Micro Devices (AMD) have defined TDP as the maximum heat generation for thermally significant periods, while running worst-case non-synthetic workloads; thus, TDP is not reflecting the actual maximum power of the processor. This ensures the computer will be able to handle essentially all applications without exceeding its thermal envelope, or requiring a cooling system for the maximum theoretical power (which would cost more but in favor of extra headroom for processing power).

In many applications, the CPU and other components are idle much of the time, so idle power contributes significantly to overall system power usage. When the CPU uses power management features to reduce energy use, other components, such as the motherboard and chipset, take up a larger proportion of the computer's energy. In applications where the computer is often heavily loaded, such as scientific computing, performance per watt (how much computing the CPU does per unit of energy) becomes more significant.

There are several factors contributing to the CPU power consumption; they include dynamic power consumption, short-circuit power consumption, and power loss due to transistor leakage currents:

formula_1

The dynamic power consumption originates from the activity of logic gates inside a CPU. When the logic gates toggle, energy is flowing as the capacitors inside them are charged and discharged. The dynamic power consumed by a CPU is approximately proportional to the CPU frequency, and to the square of the CPU voltage:
where is capacitance, is frequency, and is voltage.

When logic gates toggle, some transistors inside may change states. As this takes a finite amount of time, it may happen that for a very brief amount of time some transistors are conducting simultaneously. A direct path between the source and ground then results in some short-circuit power loss. The magnitude of this power is dependent on the logic gate, and is rather complex to model on a macro level.

Power consumption due to leakage power emanates at a micro-level in transistors. Small amounts of currents are always flowing between the differently doped parts of the transistor. The magnitude of these currents depend on the state of the transistor, its dimensions, physical properties and sometimes temperature. The total amount of leakage currents tends to inflate for increasing temperature and decreasing transistor sizes.

Both dynamic and short-circuit power consumption are dependent on the clock frequency, while the leakage current is dependent on the CPU supply voltage. It has been shown that the energy consumption of a program shows convex energy behavior, meaning that there exists an optimal CPU frequency at which energy consumption is minimal.

Power consumption can be reduced in several ways, including the following:

Historically, processor manufacturers consistently delivered increases in clock rates and instruction-level parallelism, so that single-threaded code executed faster on newer processors with no modification. More recently, in order to manage CPU power dissipation, processor makers favor multi-core chip designs, thus software needs to be written in a multi-threaded or multi-process manner to take full advantage of such hardware. Many multi-threaded development paradigms introduce overhead, and will not see a linear increase in speed when compared to the number of processors. This is particularly true while accessing shared or dependent resources, due to lock contention. This effect becomes more noticeable as the number of processors increases.

Recently, IBM has been exploring ways to distribute computing power more efficiently by mimicking the distributional properties of the human brain.

Processor can be damaged from overheating, but vendors protect processors with operational safeguards such as throttling and automatic shutdown. When a core exceeds the set throttle temperature, processors can reduce power to maintain a safe temperature level and if the processor is unable to maintain a safe operating temperature through throttling actions, it will automatically shut down to prevent permanent damage. 




